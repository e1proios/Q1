services:
    q-mongo:
        image: mongo:latest
        container_name: q-mongo
        hostname: q-mongo
        environment:
            MONGO_INITDB_ROOT_USERNAME: "admin"
            MONGO_INITDB_ROOT_PASSWORD: "admin"
        ports:
            - "27217:27017"
        volumes:
            - ./mongo-init:/docker-entrypoint-initdb.d
        healthcheck:
            test: mongosh --eval "db.adminCommand('ping')" -u admin -p admin --authenticationDatabase admin
            interval: 5s
            timeout: 15s
            retries: 3
        restart: unless-stopped
        networks:
            - q-network

    postgres:
        image: postgres:15-alpine
        container_name: keycloak-postgres
        environment:
            POSTGRES_DB: keycloak
            POSTGRES_USER: keycloak
            POSTGRES_PASSWORD: password
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - q-network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U keycloak"]
            interval: 10s
            timeout: 10s
            retries: 3

    keycloak:
        image: quay.io/keycloak/keycloak:latest
        container_name: keycloak
        command: start-dev --import-realm
        environment:
            KC_DB: postgres
            KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
            KC_DB_USERNAME: keycloak
            KC_DB_PASSWORD: password

            KC_BOOTSTRAP_ADMIN_USERNAME: admin
            KC_BOOTSTRAP_ADMIN_PASSWORD: admin

            KC_HOSTNAME: localhost
            KC_HTTP_ENABLED: true
        ports:
            - "8888:8080"
        volumes:
            - ./keycloak:/opt/keycloak/data/import
        depends_on:
            postgres:
                condition: service_healthy
        networks:
            - q-network

volumes:
    postgres_data:

networks:
    q-network:
        driver: bridge
